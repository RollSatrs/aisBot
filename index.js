import TelegramBot from 'node-telegram-bot-api'
import mongoose from 'mongoose'
import {signDB} from './saveUserDB.js'
import {signAis} from './signAis.js'


const token = '7903613362:AAEFlunRQ57OTaEDm08FTGx2_B1qAZJa0Vo'
const bot = new TelegramBot(token, {polling: true})
const mongoURI = 'mongodb+srv://Rollan:05060401Gm@cluster0.agmmz.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0'
mongoose.connect(mongoURI).then(() => {console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å–ø–µ—à–Ω–æ!')})
.catch(err =>{console.log('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', err)})

bot.onText('/start', (msg) =>{
    const chatId = msg.chat.id
    const options = {
        reply_markup:{
            inline_keyboard:[
                [
                    {text: "–í–æ–π—Ç–∏ –≤ –ê–ò–°", callback_data:"signIn"}
                ],
                [
                    {text: "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑—ã–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞", callback_data:"help"}
                ]
            ]
        }
    }
    const welcome = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ê–ò–°! üéâ
–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å —Å–ª–µ–¥—É—é—â–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏:
    - –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É –ê–ò–° —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–≤–æ–∏—Ö —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
    - –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–∏—Ö –ø–∞—Ä–∞—Ö –∏ –∑–∞–¥–∞–Ω–∏—è—Ö.
    - –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–º, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞.

–í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:
    `
    bot.sendMessage(chatId, welcome, options)
})

bot.on('callback_query', (callback)=>{
    const chatId = callback.message.chat.id
    const callbackData = callback.data
    if(callbackData === 'signIn'){
        askForLogin(chatId)
    }
})

function askForLogin(chatId){
    bot.sendMessage(chatId, "–ù–∞–ø–∏—à–∏ —Å–≤–æ–∏ –ª–æ–≥–∏–Ω –ê–ò–°–∞")
    bot.once('message', async (msg) =>{
        const login = msg.text
        console.log(login.length)
        if(login.length === 5){
            bot.sendMessage(chatId, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å–≤–æ–π –ø–∞—Ä–æ–ª—å –ê–ò–°–∞")
            bot.once('message', async (msg) =>{
                const password = msg.text
                signAis(login, password).then(() =>{bot.sendPhoto(chatId, `./screenShot/${login}.jpg`)})
                .catch((err) =>{console.log('–û—à–∏–±–∫–∞', err)})
                // try {await signDB(login, password), await bot.sendMessage(chatId, '–Ø —Å–æ—Ö—Ä–∞–Ω–∏–ª —Ç–≤–æ–π –ø–∞—Ä–æ–ª—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö')} 
                // catch(err){bot.sendMessage(chatId, `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${err}`)}
            })
        }else{
            bot.sendMessage(chatId, '–õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–æ–≤–Ω–æ 5 —Å–∏–º–≤–æ–ª–æ–≤.')
            askForLogin(chatId)
        }
    })
}



